/*
Deployment script for BookmakerDW

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "BookmakerDW"
:setvar DefaultFilePrefix "BookmakerDW"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[FactFinance].[DateId] on table [dbo].[FactFinance] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [dbo].[FactFinance].[MatchId] on table [dbo].[FactFinance] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [dbo].[FactFinance].[Profit] on table [dbo].[FactFinance] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [dbo].[FactFinance].[Tax] on table [dbo].[FactFinance] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [dbo].[FactFinance].[UserId] on table [dbo].[FactFinance] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[FactFinance])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Starting rebuilding table [dbo].[FactFinance]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_FactFinance] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [MatchId]     INT           NOT NULL,
    [UserId]      INT           NOT NULL,
    [DateId]      INT           NOT NULL,
    [Tax]         FLOAT (53)    NOT NULL,
    [Profit]      MONEY         NOT NULL,
    [ResultIsWin] BIT           NULL,
    [CreatedAt]   DATETIME2 (7) CONSTRAINT [DF_Created_At_FactFinance] DEFAULT GETDATE() NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Bet_Id1] PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[FactFinance])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FactFinance] ON;
        INSERT INTO [dbo].[tmp_ms_xx_FactFinance] ([Id])
        SELECT   [Id]
        FROM     [dbo].[FactFinance]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FactFinance] OFF;
    END

DROP TABLE [dbo].[FactFinance];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_FactFinance]', N'FactFinance';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Bet_Id1]', N'PK_Bet_Id', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[DimDate]...';


GO
CREATE TABLE [dbo].[DimDate] (
    [Id]                   INT           NOT NULL,
    [FullDate]             DATE          NOT NULL,
    [Year]                 SMALLINT      NOT NULL,
    [MonthEnglishName]     NVARCHAR (15) NOT NULL,
    [MonthNumberOfYear]    TINYINT       NOT NULL,
    [DayOfWeekEngilshName] NVARCHAR (15) NOT NULL,
    [DayNumberOfMonth]     TINYINT       NOT NULL,
    [CalendarQuarter]      TINYINT       NOT NULL,
    [CalendarSemester]     TINYINT       NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[DimLocation]...';


GO
CREATE TABLE [dbo].[DimLocation] (
    [Id]        INT            IDENTITY (1, 1) NOT NULL,
    [City]      NVARCHAR (500) NOT NULL,
    [State]     NVARCHAR (500) NOT NULL,
    [Country]   NVARCHAR (500) NOT NULL,
    [CreatedAt] DATETIME2 (7)  NOT NULL,
    CONSTRAINT [PK_Location_Id] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[DimMatch]...';


GO
CREATE TABLE [dbo].[DimMatch] (
    [Id] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[DimSport]...';


GO
CREATE TABLE [dbo].[DimSport] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [Name]        NVARCHAR (255) NOT NULL,
    [Description] NVARCHAR (800) NULL,
    [CreatedAt]   DATETIME2 (7)  NOT NULL,
    CONSTRAINT [PK_Sport_Id] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[DimTournament]...';


GO
CREATE TABLE [dbo].[DimTournament] (
    [Id]               INT            IDENTITY (1, 1) NOT NULL,
    [Name]             NVARCHAR (255) NOT NULL,
    [OrganizationName] NVARCHAR (255) NULL,
    [Description]      NVARCHAR (800) NULL,
    [CreatedAt]        DATETIME2 (7)  NOT NULL,
    CONSTRAINT [PK_Tournaments_Id] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[DimUser]...';


GO
CREATE TABLE [dbo].[DimUser] (
    [Id]                         INT            IDENTITY (1, 1) NOT NULL,
    [PassportCode]               VARCHAR (15)   NULL,
    [Series]                     NVARCHAR (5)   NULL,
    [BirthDay]                   DATE           NULL,
    [FirstName]                  NVARCHAR (255) NOT NULL,
    [LastName]                   NVARCHAR (255) NOT NULL,
    [Language]                   NVARCHAR (255) NOT NULL,
    [Email]                      NVARCHAR (100) NOT NULL,
    [Phone]                      NVARCHAR (15)  NOT NULL,
    [Age]                        INT            NOT NULL,
    [EmailIsConfirmed]           BIT            NOT NULL,
    [PhoneIsConfirmed]           BIT            NOT NULL,
    [IsConfirmedAdministrations] BIT            NOT NULL,
    CONSTRAINT [PK_User_Id] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[DF_Created_At_DimLocation]...';


GO
ALTER TABLE [dbo].[DimLocation]
    ADD CONSTRAINT [DF_Created_At_DimLocation] DEFAULT GETDATE() FOR [CreatedAt];


GO
PRINT N'Creating [dbo].[DF_Created_At_DimSport]...';


GO
ALTER TABLE [dbo].[DimSport]
    ADD CONSTRAINT [DF_Created_At_DimSport] DEFAULT GETDATE() FOR [CreatedAt];


GO
PRINT N'Creating [dbo].[DF_Created_At_DimTournament]...';


GO
ALTER TABLE [dbo].[DimTournament]
    ADD CONSTRAINT [DF_Created_At_DimTournament] DEFAULT GETDATE() FOR [CreatedAt];


GO
PRINT N'Creating [dbo].[FK_Match_FactFinance_Events]...';


GO
ALTER TABLE [dbo].[FactFinance] WITH NOCHECK
    ADD CONSTRAINT [FK_Match_FactFinance_Events] FOREIGN KEY ([MatchId]) REFERENCES [dbo].[DimMatch] ([Id]);


GO
PRINT N'Creating [dbo].[FK_User_FactFinance_Users]...';


GO
ALTER TABLE [dbo].[FactFinance] WITH NOCHECK
    ADD CONSTRAINT [FK_User_FactFinance_Users] FOREIGN KEY ([UserId]) REFERENCES [dbo].[DimUser] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Date_FactFinance_DimDate]...';


GO
ALTER TABLE [dbo].[FactFinance] WITH NOCHECK
    ADD CONSTRAINT [FK_Date_FactFinance_DimDate] FOREIGN KEY ([DateId]) REFERENCES [dbo].[DimDate] ([Id]);


GO
PRINT N'Creating [dbo].[CK_User_Age_DimUser]...';


GO
ALTER TABLE [dbo].[DimUser] WITH NOCHECK
    ADD CONSTRAINT [CK_User_Age_DimUser] CHECK ([Age] >= 18);


GO
PRINT N'Creating [dbo].[FillDimDate]...';


GO
CREATE PROCEDURE [dbo].[FillDimDate]
	@fromYear SMALLINT = 2018
	,@fromMonth TINYINT = 1
	,@fromDay TINYINT = 1
AS
BEGIN
	BEGIN TRAN
	BEGIN TRY
		DECLARE @fromDate DATE =  TRY_CONVERT(DATE, CONCAT(@fromYear, N'/', @fromMonth, N'/', @fromDay));
		DECLARE @toDate DATE = DATEADD(YEAR, 10, @fromDate);
		
		;WITH RangeDate([Date]) AS (
			SELECT @fromDate AS [Date]
				UNION ALL
				SELECT DATEADD(DAY, 1, [Date]) FROM RangeDate
				WHERE DATEADD(DAY, 1, [Date]) < @toDate
		)
		INSERT INTO [dbo].[DimDate](
			[Id]
			,[FullDate]
			,[Year]
			,[MonthEnglishName]
			,[MonthNumberOfYear]
			,[DayOfWeekEngilshName]
			,[DayNumberOfMonth]
			,[CalendarQuarter]
			,[CalendarSemester]) 
				SELECT CONVERT(INT, FORMAT([DATE], 'yyyyMMdd')) AS [DateID]
						,[DATE]
						,YEAR([DATE])
						,DATENAME(MONTH, [DATE])
						,MONTH([DATE])
						,DATENAME(WEEKDAY, [DATE])
						,DAY([DATE])
						,DATEPART(QUARTER, [DATE])
						,((DATEPART(QUARTER,[DATE])-1)/2)+1
							FROM RangeDate
				OPTION(MAXRECURSION 4000)

		COMMIT
	END TRY
	BEGIN CATCH
		IF (@@ERROR <> 0)
			ROLLBACK;		
		THROW;
	END CATCH
END;
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/


EXEC [dbo].[FillDimDate]
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[FactFinance] WITH CHECK CHECK CONSTRAINT [FK_Match_FactFinance_Events];

ALTER TABLE [dbo].[FactFinance] WITH CHECK CHECK CONSTRAINT [FK_User_FactFinance_Users];

ALTER TABLE [dbo].[FactFinance] WITH CHECK CHECK CONSTRAINT [FK_Date_FactFinance_DimDate];

ALTER TABLE [dbo].[DimUser] WITH CHECK CHECK CONSTRAINT [CK_User_Age_DimUser];


GO
PRINT N'Update complete.';


GO
